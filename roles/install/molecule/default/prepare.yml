---
- name: Prepare Vault
  hosts:
    - linux
  pre_tasks:
    - name: Bootstrap python for Ansible
      become: true
      ansible.builtin.raw: |
        command -v python3 python || (
        command -v apk >/dev/null && sudo apk add --no-progress --update python3 ||
        (test -e /usr/bin/dnf && sudo dnf install -y python3) ||
        (test -e /usr/bin/apt && (apt -y update && apt install -y python-minimal)) ||
        (test -e /usr/bin/yum && sudo yum -y -qq install python3) ||
        (test -e /usr/sbin/pkg && sudo env ASSUME_ALWAYS_YES=yes pkg update && sudo env ASSUME_ALWAYS_YES=yes pkg install python3) ||
        (test -e /usr/sbin/pkg_add && sudo /usr/sbin/pkg_add -U -I -x python%3.7) ||
        echo "Warning: Python not bootstrapped due to unknown platform."
        )
      changed_when: false
  roles:
    - role: trippsc2.hashi_vault.testing
  tasks:
    - name: Create PKI secret engine
      delegate_to: localhost
      trippsc2.hashi_vault.vault_pki_secret_engine:
        token: "{{ vault_token }}"
        url: "{{ vault_url }}"
        engine_mount_point: pki
        state: present

    - name: Generate root CA certificate
      delegate_to: localhost
      trippsc2.hashi_vault.vault_pki_root_ca_certificate:
        authtype: token
        token: "{{ vault_token }}"
        url: "{{ vault_url }}"
        engine_mount_point: pki
        common_name: RootCA
        ttl: 157680000
        state: present
      register: _rootca

    # TODO - Add module to trippsc2.hashi_vault

    - name: Create verbatim role
      delegate_to: localhost
      trippsc2.hashi_vault.vault_pki_role:
        authtype: token
        token: "{{ vault_token }}"
        url: "{{ vault_url }}"
        engine_mount_point: pki
        name: verbatim
        allow_any_name: true
        allow_bare_domains: true
        allow_glob_domains: true
        allow_ip_sans: true
        allow_localhost: true
        client_flag: true
        enforce_hostnames: true
        require_cn: true

    - name: Set root CA directory variable (Debian-based)
      when:
        - ansible_os_family == 'Debian'
      ansible.builtin.set_fact:
        _rootca_directory: /usr/local/share/ca-certificates

    - name: Set root CA directory variable (Red Hat-based)
      when:
        - ansible_os_family == 'RedHat'
      ansible.builtin.set_fact:
        _rootca_directory: /etc/pki/ca-trust/source/anchors

    - name: Create Root CA PEM file
      become: true
      ansible.builtin.copy:
        content: "{{ _rootca.certificate }}"
        dest: "{{ _rootca_directory }}/rootca.crt"
        owner: root
        group: root
        mode: '0644'
      notify:
        - _update_ca_trust
        - _update_ca_certificates
  handlers:
    - name: Update CA trust
      listen: _update_ca_trust
      become: true
      ansible.builtin.command: |
        update-ca-trust
      changed_when: true

    - name: Update CA certificates
      listen: _update_ca_certificates
      become: true
      ansible.builtin.command: |
        update-ca-certificates
      changed_when: true

- name: Prepare
  hosts:
    - linux
  pre_tasks:
    - name: Create postgres group
      become: true
      ansible.builtin.group:
        name: postgres
        state: present
        system: true
    
    - name: Create postgres user
      become: true
      ansible.builtin.user:
        name: postgres
        group: postgres
        system: true
        shell: /usr/sbin/nologin
        home: /var/lib/pgsql
        createhome: false
        comment: PostgreSQL Server
        state: present
 
    - name: Set root CA directory variable (Debian-based)
      when:
        - ansible_os_family == 'Debian'
      ansible.builtin.set_fact:
        _cert_directory: /etc/ssl/certs
        _private_key_directory: /etc/ssl/private

    - name: Set root CA directory variable (Red Hat-based)
      when:
        - ansible_os_family == 'RedHat'
      ansible.builtin.set_fact:
        _cert_directory: /etc/pki/tls/certs
        _private_key_directory: /etc/pki/tls/private
  roles:
    # Add role to trippsc2.hashi_vault
    - role: trippsc2.hashi_vault.signed_certificate
      vars:
        cert_certificate_path: "{{ _cert_directory }}/server.crt"
        cert_private_key_path: "{{ _private_key_directory }}/server.key"
        cert_certificate_owner: postgres
        cert_certificate_group: postgres
        cert_private_key_owner: postgres
        cert_private_key_group: postgres
        cert_common_name: localhost
        cert_subject_alternative_names:
          - 'DNS:localhost'
          - 'IP:127.0.0.1'
        cert_vault_extra_params:
          ttl: 2628000
