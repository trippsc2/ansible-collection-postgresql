---
- name: Create user
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ _pgsql_user.name }}"
    role_attr_flags: "{{ _pgsql_user.role_attr_flags | default(omit) }}"
    password: "{{ _pgsql_user.password | default(omit) }}"
    state: "{{ _pgsql_user.state | default('present') }}"
  vars:
    ansible_ssh_pipelining: true

- name: Configure database privileges
  loop: "{{ _pgsql_user.database_privileges | default([]) }}"
  become: true
  become_user: postgres
  vars:
    ansible_ssh_pipelining: true
  community.postgresql.postgresql_privs:
    database: "{{ item.database }}"
    grant_option: "{{ item.grant_option | default(omit) }}"
    privs: "{{ item.privileges | join(',') }}"
    roles: "{{ _pgsql_user.name }}"
    type: database
    state: "{{ item.state | default('present') }}"

# TODO - Add module to trippsc2.hashi_vault

- name: Create Hashicorp Vault static role
  when:
    - pgsql_configure_vault_database_connection
    - _pgsql_user.password is not defined
  delegate_to: localhost
  pag.hashivault.hashivault_db_secret_engine_static_role:
    authtype: token
    token: "{{ vault_token | default(omit) }}"
    url: "{{ vault_url | default(omit) }}"
    mount_point: "{{ pgsql_vault_database_mount_point }}"
    name: "{{ inventory_hostname }}_{{ _pgsql_user.name }}"
    db_name: "{{ inventory_hostname | lower }}"
    username: "{{ _pgsql_user.name }}"
    rotation_statements: []
    rotation_period: "{{ pgsql_password_rotation_period }}"
